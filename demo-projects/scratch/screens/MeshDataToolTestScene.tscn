[gd_scene load_steps=5 format=2]

[ext_resource path="res://screens/MeshDataToolTestScene.cs" type="Script" id=1]
[ext_resource path="res://asset/fish/Fish1.obj" type="ArrayMesh" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
//render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
//uniform vec4 albedo : hint_color;
//uniform sampler2D texture_albedo : hint_albedo;
//uniform float specular;
//uniform float metallic;
//uniform float roughness : hint_range(0,1);
//uniform float point_size : hint_range(0,128);
//uniform vec3 uv1_scale;
//uniform vec3 uv1_offset;
//uniform vec3 uv2_scale;
//uniform vec3 uv2_offset;

//
//varying vec4 vbc;
//
//void vertex() {
//	UV=UV*uv1_scale.xy+uv1_offset.xy;
//	vbc = COLOR;
//}



void fragment() {
//	vec2 base_uv = UV;
//	vec4 albedo_tex = texture(texture_albedo,base_uv);
//	ALBEDO = albedo.rgb * albedo_tex.rgb;
	
	float threshhold = 0.1;
	
	if(COLOR.x < 0.01 || COLOR.y < 0.01 || COLOR.z < 0.01) {
		ALBEDO = vec3(0.0, 0.0, 0.0);
	} else {
		ALBEDO = vec3(0.5, 0.5, 0.5);
	}
//	if(COLOR.x > (1.0-threshhold) || COLOR.y > (1.0-threshhold) || COLOR.z > (1.0-threshhold)) {
//		ALBEDO = vec3(0.0, 0.0, 0.0);
//	} else {
//		ALBEDO = vec3(0.5, 0.5, 0.5);
//	}
	
	ALBEDO = COLOR.rgb;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="Test" type="MeshInstance" parent="."]
material_override = SubResource( 2 )
mesh = ExtResource( 2 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.5, 0, 0.866025, 0, 1, 0, -0.866025, 0, 0.5, 9, 0, 5.1378 )
